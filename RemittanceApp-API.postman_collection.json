{
  "info": {
    "name": "RemittanceApp Backend API",
    "description": "Complete API collection for RemittanceApp backend with Nium integration",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health & Info",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check server health status"
          },
          "response": []
        },
        {
          "name": "API Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            },
            "description": "Get API information and available endpoints"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.tokens.accessToken) {",
                  "        pm.collectionVariables.set('authToken', response.data.tokens.accessToken);",
                  "        console.log('Auth token saved:', response.data.tokens.accessToken.substring(0, 20) + '...');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phoneNumber\": \"+1 555 123 4567\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.tokens.accessToken) {",
                  "        pm.collectionVariables.set('authToken', response.data.tokens.accessToken);",
                  "        console.log('Auth token updated:', response.data.tokens.accessToken.substring(0, 20) + '...');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login with email and password"
          },
          "response": []
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Get current user profile (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"phoneNumber\": \"+1 555 987 6543\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Update user profile information"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Wallet Operations",
      "item": [
        {
          "name": "Get User Wallets",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/wallets",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "wallets"]
            },
            "description": "Get all wallets for the authenticated user"
          },
          "response": []
        },
        {
          "name": "Get All Transactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "transactions"]
            },
            "description": "Get all transactions for the authenticated user"
          },
          "response": []
        },
        {
          "name": "Get Wallet Transactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/transactions/wallet_usd_123",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "transactions", "wallet_usd_123"]
            },
            "description": "Get transactions for a specific wallet"
          },
          "response": []
        },
        {
          "name": "Get Beneficiaries",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/beneficiaries",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "beneficiaries"]
            },
            "description": "Get all beneficiaries for the authenticated user"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Exchange Rates",
      "item": [
        {
          "name": "Get Exchange Rate USD to EUR",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/exchange-rates?from=USD&to=EUR",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "exchange-rates"],
              "query": [
                {
                  "key": "from",
                  "value": "USD"
                },
                {
                  "key": "to",
                  "value": "EUR"
                }
              ]
            },
            "description": "Get exchange rate from USD to EUR (public endpoint)"
          },
          "response": []
        },
        {
          "name": "Get Exchange Rate USD to CAD",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/exchange-rates?from=USD&to=CAD",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "exchange-rates"],
              "query": [
                {
                  "key": "from",
                  "value": "USD"
                },
                {
                  "key": "to",
                  "value": "CAD"
                }
              ]
            },
            "description": "Get exchange rate from USD to CAD"
          },
          "response": []
        },
        {
          "name": "Get Exchange Rate GBP to USD",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/exchange-rates?from=GBP&to=USD",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "exchange-rates"],
              "query": [
                {
                  "key": "from",
                  "value": "GBP"
                },
                {
                  "key": "to",
                  "value": "USD"
                }
              ]
            },
            "description": "Get exchange rate from GBP to USD"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Money Transfer",
      "item": [
        {
          "name": "Send Money",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"beneficiaryHashId\": \"ben_123456789\",\n  \"amount\": 500.00,\n  \"sourceCurrencyCode\": \"USD\",\n  \"destinationCurrencyCode\": \"EUR\",\n  \"purpose\": \"Family support\",\n  \"description\": \"Monthly allowance payment\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/wallet/send-money",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "send-money"]
            },
            "description": "Send money to a beneficiary"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Debug & Testing",
      "item": [
        {
          "name": "Test Nium Connection",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/test-nium-connection",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "test-nium-connection"]
            },
            "description": "Test connection to Nium API"
          },
          "response": []
        },
        {
          "name": "Debug Configuration",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/debug-config",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "debug-config"]
            },
            "description": "Get current API configuration for debugging"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Test invalid login credentials"
          },
          "response": []
        },
        {
          "name": "Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            },
            "description": "Test accessing protected route without token"
          },
          "response": []
        },
        {
          "name": "Invalid Exchange Rate",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/wallet/exchange-rates?from=INVALID&to=EUR",
              "host": ["{{baseUrl}}"],
              "path": ["api", "wallet", "exchange-rates"],
              "query": [
                {
                  "key": "from",
                  "value": "INVALID"
                },
                {
                  "key": "to",
                  "value": "EUR"
                }
              ]
            },
            "description": "Test invalid currency code"
          },
          "response": []
        },
        {
          "name": "Invalid Registration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid-email\",\n  \"password\": \"123\",\n  \"firstName\": \"\",\n  \"lastName\": \"\"1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Test registration with invalid data"
          },
          "response": []
        },
        {
          "name": "Non-existent Endpoint",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/non-existent",
              "host": ["{{baseUrl}}"],
              "path": ["api", "non-existent"]
            },
            "description": "Test 404 error handling"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Log the request being made",
          "console.log('Making request to:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Log response status",
          "console.log('Response status:', pm.response.code);",
          "",
          "// Test for successful responses",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    pm.test('Status code is success', function () {",
          "        pm.expect(pm.response.code).to.be.at.least(200).and.below(300);",
          "    });",
          "}",
          "",
          "// Test response format",
          "pm.test('Response has JSON format', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Test API response structure",
          "if (pm.response.json()) {",
          "    const response = pm.response.json();",
          "    pm.test('Response has success field', function () {",
          "        pm.expect(response).to.have.property('success');",
          "    });",
          "    pm.test('Response has message field', function () {",
          "        pm.expect(response).to.have.property('message');",
          "    });",
          "}"
        ]
      }
    }
  ]
}
